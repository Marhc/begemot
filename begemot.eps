%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 201.25984 324.56693 394.01575 517.32283 
%%Creator: CorelDRAW 8
%%Title: D:\work\old\Begemot.eps
%%CreationDate: Thu Jan 06 02:53:58 2000
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Color profile: Disabled
%%BeginResource: procset wCorel8Dict 8.0 0
/wCorel8Dict 300 dict def wCorel8Dict begin
% Copyright (c)1992-97 Corel Corporation
% All rights reserved.     v8.0 r0.7
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/setscreen{pop pop pop}bd/@ss{2 index
0 eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SepMode_5 where{pop}{/SepMode_5 0 def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def
/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict/Corel30Dict get
exec}if systemdict/CorelLexDict known{1 systemdict/CorelLexDict get exec}if}bd
/@EndSysCorelDict{systemdict/Corel30Dict known{end}if/EndCorelLexDict where
{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/SetCmyk_5/setcmykcolor ld}{/SetCmyk_5{
cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk/currentcmykcolor
ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{
/$op xd}bd}ifelse/currentoverprint where{pop}{/currentoverprint{$op}bd}ifelse
/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/@trp{exch pop 5 1 roll @tc_5}bd/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0
4 $ink_5 sub index exch pop 5 1 roll pop pop pop pop SepsColor true eq{$ink_5 3
gt{1 sub neg SetGry}{0 0 0 4 $ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}
ifelse}ifelse}bd/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array
astore}bd}ifelse/setcustomcolor where{pop}{/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}
ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type
/booleantype eq{setoverprint}{1 eq setoverprint}ifelse dup _ eq{pop
setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse SepMode_5
0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd pop/dataaq xd{dataaq
ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index
get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g
255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}bd
}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{0 0 0 0}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE systemdict
/image get def/image{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}
{dup type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent
get 8 eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray
eq and{CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5
(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}
ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft
{$tllx $pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt
{$phei add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{
cvx exec}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if
$phei sub $ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add
$llx le{/$in false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg
0 rl 0 $phei rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1
roll 3 index sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop
}ifelse @rs}bd/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid
sub}{exit}ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3
copy 3 -1 roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup
$pwid mul $tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}
ifelse}loop 0 1 $tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm
0 def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse
}bd/@pf{@gs $ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform
/$tury xd/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx
$tlly m $tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox
@rs/$tury xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury
$tlly sub def @gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o
@scc_5{SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8
0 0 1 0 0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt
and{$pn cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd
$wid $pwid div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx
0 eq{@tv}{@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0
ne or $ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm
setmatrix 72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch
itransform ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch
itransform floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec
}{1 SetGry wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp
@ss}if $fil 1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5
{wfill}{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}
bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if
$T $C $M $Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub scale $wid
$hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/@cc load false $ncl
ColorImage $SDF{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel8Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
201.25984 324.56693 394.01575 517.32283 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
201.25984 517.32283 m
394.01575 517.32283 L
394.01575 324.56693 L
201.25984 324.56693 L
201.25984 517.32283 L
@c
F

@rax %Note: Object
209.86186 327.40157 385.41373 514.48819 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
277.01291 330.24246 m
275.24183 342.93515 271.51569 355.92265 276.16422 368.83616 C
277.30828 370.97603 280.59165 371.27112 282.95320 371.71417 C
290.66428 370.20132 297.63808 364.66696 302.43430 359.39055 C
302.12674 359.10765 301.81946 358.82504 301.51191 358.54214 C
295.86699 363.33865 287.97080 368.61477 279.44787 369.27865 C
278.99320 368.91014 278.53795 368.54079 278.08271 368.17172 C
275.72173 356.10718 278.52576 344.07893 279.44787 331.75531 C
281.25609 330.24246 283.21172 331.75531 285.12992 331.75531 C
286.80945 332.47899 294.28271 336.70743 295.60847 337.88013 C
298.22797 340.75814 301.84413 343.19310 304.68501 346.21852 C
307.63672 347.62054 311.87991 348.87543 315.82772 348.21128 C
317.19288 352.15880 317.19288 356.36513 315.01616 360.53433 C
314.24117 361.12479 313.90894 361.56756 312.50693 362.23143 C
310.62557 362.04690 308.55912 361.82608 306.38239 360.97710 C
305.61647 361.48110 305.40728 361.98539 305.75509 362.48995 C
308.55912 364.40872 312.32268 364.88806 315.60605 364.88806 C
317.19288 367.95033 319.36989 370.38586 322.65326 371.71417 C
324.45723 373.51814 329.71181 374.70728 332.06202 373.48526 C
336.67398 368.43024 334.90290 361.12479 334.46013 354.99997 C
333.73020 351.97795 332.49203 343.21096 329.25798 343.41449 C
329.25798 342.75061 330.36463 343.19310 330.10639 342.08617 C
327.08069 341.34860 323.50224 341.82794 320.21830 343.41449 C
319.35260 344.35587 315.16384 345.59603 315.16384 346.21852 C
312.06444 344.66882 309.03874 344.52170 305.75509 345.59150 C
304.29496 343.29146 303.52819 341.48041 300.92145 340.09427 C
300.05433 338.88954 299.29436 338.62932 298.11742 337.73244 C
296.73269 336.67455 295.24082 335.96476 294.94431 333.96945 C
292.71458 331.53647 288.37729 328.64060 285.46214 327.40157 C
281.21046 327.40157 280.78980 327.75789 277.01291 330.24246 C
@c
283.21172 344.33717 m
284.65058 347.73137 287.63915 349.79783 291.58696 350.90447 C
293.09981 351.49493 294.53868 351.05216 296.30976 352.15880 C
296.16208 352.38047 296.01468 352.60186 295.86699 352.82324 C
292.65676 353.85619 289.44680 354.88913 286.23685 355.92265 C
285.10526 358.09143 291.23943 358.90583 292.84129 359.20602 C
295.60847 358.94806 298.56019 358.09937 301.06913 356.36513 C
301.94986 357.17301 303.14041 356.34047 303.76233 355.66413 C
303.32013 355.17203 302.87707 354.67994 302.43430 354.18841 C
298.89241 354.99997 294.53868 357.21383 290.48031 356.10718 C
294.53868 353.74535 299.81480 353.26573 304.68501 353.08148 C
304.68501 354.77858 304.83269 356.77106 303.57836 358.76353 C
304.14387 358.60365 304.70967 358.44378 305.27518 358.28391 C
307.52617 357.84085 309.48123 358.54214 311.87991 358.28391 C
312.30992 358.02539 312.74050 357.76715 313.17109 357.50920 C
313.10957 357.20164 313.04806 356.89408 312.98655 356.58652 C
311.73222 355.92265 310.14567 355.44274 308.78050 354.33609 C
307.23534 354.33609 307.20302 353.54466 305.93962 353.08148 C
305.27518 352.15880 305.93962 350.64624 305.16435 349.79783 C
304.68501 349.79783 304.35307 350.64624 304.24224 351.23669 C
302.04737 351.23669 300.93137 351.64545 300.47896 349.31792 C
298.95676 349.03276 296.55071 348.53641 295.86699 346.88296 C
292.36167 344.92734 288.74608 343.85754 284.98224 342.93515 C
283.90280 342.93515 283.61395 343.42271 283.21172 344.33717 C
@c
295.60847 344.92734 m
297.78576 346.51389 300.25757 347.95276 303.32013 349.53931 C
303.57836 349.53931 304.68501 349.53931 304.83269 348.65405 C
302.41361 346.56860 297.91134 346.04957 295.27625 343.41449 C
295.38709 343.91906 295.49792 344.42277 295.60847 344.92734 C
@c
286.90101 344.52170 m
288.30302 346.21852 291.58696 346.03398 293.28435 348.21128 C
294.42784 348.39581 295.38709 349.05969 296.71540 349.53931 C
296.80157 349.37943 296.88746 349.21956 296.97364 349.05969 C
294.42784 347.14120 290.48031 345.37011 286.90101 344.52170 C
@c
325.67868 344.92734 m
323.31770 345.11187 320.47654 346.51389 318.63175 348.39581 C
319.36989 350.90447 319.55443 353.74535 319.36989 356.36513 C
321.62031 356.36513 323.98186 357.21383 326.60135 357.61946 C
327.66463 356.65937 328.52891 356.16643 329.44252 357.84085 C
329.06835 358.43329 328.01726 359.49260 327.41291 359.68592 C
325.67868 359.68592 324.12926 359.39055 322.21077 358.76353 C
323.50224 359.39055 324.57203 360.53433 326.15858 361.38302 C
326.15858 362.72778 328.72677 362.58066 326.15858 364.22419 C
323.50224 364.88806 320.21830 364.22419 318.00472 362.23143 C
317.79553 362.31761 317.58633 362.40378 317.37742 362.48995 C
317.22973 362.87121 317.08205 363.25276 316.93436 363.63345 C
317.37742 365.33083 318.92683 366.43776 320.21830 367.69238 C
320.80876 367.95033 321.62031 367.95033 322.39531 368.61477 C
324.12926 370.20132 327.08069 370.38586 329.44252 371.71417 C
332.54192 363.63345 332.06202 353.74535 328.33559 345.37011 C
327.63260 344.84287 326.48258 345.50135 325.67868 344.92734 C
@c
305.93962 354.18841 m
305.99830 357.20447 308.30287 357.36293 310.95723 357.02929 C
310.14567 356.36513 309.22328 355.66413 308.11606 354.99997 C
307.34334 354.99997 306.46261 354.86079 305.93962 354.18841 C
@c
318.29953 359.39055 m
319.11137 360.79257 320.21830 361.82608 322.39531 362.71134 C
322.70258 362.41597 323.01014 362.12088 323.31770 361.82608 C
321.95254 360.97710 320.80876 359.87046 318.92683 358.94806 C
318.71792 359.09518 318.50872 359.24287 318.29953 359.39055 C
@c
352.02274 391.04731 m
351.55162 392.35266 342.89972 391.97509 341.69187 390.42028 C
332.06202 386.87811 322.21077 380.27395 312.50693 386.39877 C
310.62557 388.57550 309.03874 392.11767 310.81011 395.14309 C
311.09981 396.59386 312.81477 397.73083 314.09348 398.24220 C
315.05131 397.35780 312.86494 395.86280 312.32268 394.95855 C
311.40000 392.78154 312.80202 389.49817 315.01616 388.16957 C
319.55443 384.62769 325.49414 386.65672 330.69685 387.91162 C
336.96935 391.01046 343.27843 394.77402 349.66148 395.62243 C
352.02274 397.31981 351.24803 401.08365 351.35887 404.03480 C
348.75128 405.25285 346.14397 406.47033 343.53666 407.68781 C
341.62781 409.23524 341.34350 413.49855 343.72120 414.73474 C
343.20444 417.35424 341.06485 420.97039 339.18293 423.81128 C
332.68932 433.40428 320.84561 446.65002 311.80592 453.58639 C
300.78482 462.04356 292.28287 457.85395 286.79046 445.87531 C
286.79046 443.43978 287.23323 442.36998 286.31055 440.78343 C
285.17499 440.78343 284.92951 442.06016 284.53975 443.03443 C
282.76866 450.81921 289.33597 459.37899 294.28044 460.08028 C
304.77543 463.61509 311.37817 458.39083 318.70545 451.74189 C
328.11420 443.07128 339.99477 428.60806 344.97553 415.65713 C
346.11931 415.36233 347.48447 415.84167 348.73880 415.84167 C
347.43146 414.95726 344.93471 413.83843 344.31165 412.55830 C
343.74387 408.01748 351.34101 405.77216 354.08920 405.28970 C
355.95326 408.48548 358.19943 408.97276 359.99263 412.55830 C
359.99263 418.87814 353.27792 413.94614 352.02274 416.09991 C
354.06227 417.33836 358.97272 416.47861 359.54957 417.79729 C
357.21978 420.86920 353.54268 424.18233 350.43619 427.83307 C
347.15282 431.11672 343.86888 436.90961 344.79099 441.66926 C
344.79099 444.50901 348.94942 446.42580 350.91581 447.38816 C
351.24803 448.05203 352.28098 448.23657 352.50265 449.15868 C
352.28098 450.41357 351.35887 451.99984 350.76841 453.51241 C
349.44236 455.10378 345.69043 460.48479 345.45543 462.33071 C
348.47773 465.71613 351.32202 459.43228 352.68718 457.23940 C
353.60929 455.54202 353.16652 453.51241 354.53197 451.52050 C
355.30668 451.52050 355.60176 452.25808 356.70869 452.92252 C
358.14756 453.10706 359.99263 452.44261 361.24696 451.15143 C
363.35055 447.76233 363.72302 446.33650 365.01024 442.55452 C
365.01024 436.90961 365.45301 431.37524 363.49739 426.09883 C
363.01635 424.80340 360.54255 421.22863 358.62746 421.22863 C
359.06995 419.78976 360.32457 419.12561 361.24696 417.20683 C
363.06454 416.33405 361.88391 415.82608 362.57528 414.25512 C
362.16907 413.66494 362.57528 413.00050 362.16907 412.07839 C
362.35361 411.89386 363.01805 411.67247 363.60822 411.22998 C
369.40082 411.22998 376.00554 412.07839 381.46592 410.15962 C
382.57285 410.15962 383.71635 410.15962 384.97124 410.15962 C
384.15940 409.71713 383.23701 410.15962 382.13036 409.71713 C
377.92375 411.22998 373.82825 410.30731 369.40082 410.97146 C
367.85112 410.15962 366.11745 410.63953 364.42006 410.63953 C
363.96907 409.38718 364.00507 408.04186 365.45301 407.35559 C
371.79921 407.35559 379.03096 409.05298 385.41373 405.95357 C
382.79424 406.21181 380.10076 407.94605 377.25987 406.43320 C
373.34891 407.35559 369.62220 406.43320 365.45301 406.43320 C
364.91301 405.97030 364.51843 404.76019 364.42006 404.03480 C
364.61650 403.88769 364.81323 403.74000 365.01024 403.59231 C
369.54850 403.59231 374.08677 403.59231 378.62504 403.59231 C
378.39118 403.43244 378.15761 403.27257 377.92375 403.11241 C
373.42290 402.96501 368.92148 402.81732 364.42006 402.66964 C
363.48094 400.95780 360.41443 396.34469 356.96693 393.00293 C
358.59033 377.80214 331.43471 373.44841 334.09134 375.95707 C
336.56343 378.28148 342.50372 377.83899 347.44762 381.67597 C
350.84211 384.25861 353.35106 387.24718 352.02274 391.04731 C
@c
211.19017 387.24718 m
211.19017 391.85943 214.28929 396.54510 215.98668 401.34132 C
215.98668 402.48567 215.39622 401.08365 214.73235 401.82123 C
214.79386 402.10413 214.85537 402.38674 214.91688 402.66964 C
216.90907 404.84665 218.68016 407.46614 221.63187 409.23751 C
221.90230 409.23751 222.17301 409.23751 222.44343 409.23751 C
220.35288 405.36340 218.26176 401.48901 216.17121 397.61518 C
215.66920 394.60280 212.11228 390.29414 212.11228 387.46857 C
211.80529 387.39487 211.49773 387.32117 211.19017 387.24718 C
@c
329.92186 405.51052 m
330.17414 404.60258 330.06132 404.82113 329.25798 404.36702 C
311.51112 403.42564 292.06318 399.94072 269.88350 393.31247 C
264.20145 391.61565 258.40318 389.22520 251.29644 387.46857 C
251.24740 388.43660 301.03994 405.84331 329.92186 405.51052 C
@c
273.06510 388.83373 m
287.15953 395.88094 302.17635 399.16488 316.93436 401.34132 C
319.36989 401.56299 321.95254 402.19030 324.57203 402.19030 C
324.42435 402.06728 324.27666 401.94425 324.12926 401.82123 C
307.30479 398.72183 290.48031 395.88094 273.28620 388.83373 C
273.21250 388.83373 273.13852 388.83373 273.06510 388.83373 C
@c
351.24803 393.85191 m
352.94542 396.72964 353.60929 400.75143 354.86362 404.03480 C
355.81918 404.85231 359.75820 408.83783 360.65650 408.38854 C
363.16573 404.51443 361.17298 399.90246 356.89323 396.06548 C
355.04816 394.81058 352.93039 394.94863 351.24803 393.85191 C
@c
209.86186 397.61518 m
209.86186 404.62526 213.36718 412.55830 218.01572 418.68255 C
216.49748 418.68255 215.88406 417.84775 214.91688 416.76435 C
214.34513 416.18665 211.63748 414.22961 211.19017 416.76435 C
213.56277 425.55912 220.68765 431.84778 225.72709 439.08605 C
230.35153 443.90636 234.77414 448.98151 239.48957 453.69694 C
244.10126 457.71874 250.70598 460.56019 255.02287 465.61465 C
261.89121 476.53427 269.86479 488.67959 275.13128 498.34120 C
280.11231 503.35937 285.57298 509.00457 292.17713 513.43200 C
293.22369 514.79036 296.40869 515.11096 297.63808 512.76813 C
304.83269 502.76891 306.86173 489.70772 310.33020 478.34362 C
311.00145 476.92517 320.17776 477.04876 320.69820 477.45836 C
323.98186 482.99272 327.74513 486.60860 331.47156 491.03575 C
335.50753 493.92057 338.85071 498.74740 344.31165 499.78035 C
350.46198 496.40740 348.27506 482.43033 348.99732 476.53569 C
348.99732 475.89591 348.29631 474.74646 348.29631 473.47370 C
347.91506 473.47370 347.53351 473.47370 347.15282 473.47370 C
346.89430 476.41266 346.63606 479.35191 346.37754 482.29200 C
346.00025 485.92035 345.22072 495.07739 341.95011 496.97603 C
337.56406 494.13118 332.26016 488.61269 328.99946 484.06252 C
327.47443 481.71373 325.94939 479.36438 324.42435 477.01559 C
327.13002 476.14252 329.83569 475.26888 332.54192 474.39581 C
332.86989 473.54258 332.62299 473.49780 331.80378 473.25231 C
324.57203 475.02340 317.52482 475.02340 310.14567 474.17443 C
305.16435 484.91150 301.40135 498.56287 294.42784 509.66872 C
295.34372 511.37830 295.90441 513.70129 293.50517 511.51323 C
290.54750 508.95468 282.75052 502.73660 279.36652 498.74740 C
273.08381 491.19761 265.76419 479.37572 261.47991 470.15291 C
259.67055 467.10425 251.42542 459.10205 250.96422 457.90328 C
249.07748 457.52598 243.75458 452.70283 242.51528 451.77874 C
240.43606 451.77874 231.25011 440.62583 229.01102 439.08605 C
223.50501 431.83729 217.41109 427.03795 213.36718 418.46145 C
213.62513 418.01868 226.50123 427.65307 228.08835 428.93972 C
228.56825 428.27584 228.08835 427.61140 228.56825 426.68929 C
221.79543 421.04523 212.18854 406.36488 211.19017 397.31981 C
210.74712 397.41817 210.30463 397.51682 209.86186 397.61518 C
@c
269.11701 401.34132 m
288.41386 407.35559 309.70261 411.22998 329.25798 408.13058 C
328.95043 407.98290 328.64287 407.83521 328.33559 407.68781 C
308.78050 409.90139 289.33597 405.51052 269.59691 401.56299 C
269.43676 401.48901 269.27688 401.41531 269.11701 401.34132 C
@c
323.31770 421.89250 m
321.12822 422.98724 318.93931 424.08170 316.74983 425.17644 C
310.95723 427.02151 305.27518 427.35317 299.33490 427.16920 C
299.55628 427.53770 299.77767 427.90677 299.99934 428.27584 C
305.15754 431.66948 314.16406 437.65398 319.77524 435.98693 C
324.11735 434.12627 327.55748 426.70602 325.93720 422.37241 C
325.04712 421.03729 324.10545 421.89250 323.31770 421.89250 C
@c
324.42435 422.81546 m
323.50224 423.40535 322.87465 423.40535 321.62031 424.06980 C
322.86643 424.02189 324.63354 427.05099 324.12926 427.35317 C
324.57203 426.57846 325.01480 423.88526 324.42435 422.81546 C
@c
352.02274 427.83307 m
351.83820 428.49723 351.35887 428.93972 350.76841 429.60416 C
349.84602 435.80268 351.35887 442.11175 354.19975 448.49480 C
356.74243 451.03748 355.04192 450.27780 358.62746 450.85606 C
359.29134 450.22904 359.99263 450.22904 360.65650 449.34321 C
364.08784 441.66926 362.57528 433.62567 360.32457 425.65635 C
360.32457 424.70674 358.11383 423.37531 357.48312 422.81546 C
357.18973 422.81546 352.56302 427.32624 352.02274 427.83307 C
@c
313.17109 427.61140 m
309.88743 428.49723 306.60350 428.49723 303.09846 428.75518 C
303.54293 429.64413 306.83820 430.76013 307.30479 431.55978 C
309.03874 432.03912 310.95723 433.62567 312.98655 433.95789 C
314.04472 433.42894 312.67899 431.75480 312.32268 430.93219 C
312.32268 429.33883 313.17109 428.77984 313.17109 427.61140 C
@c
314.68394 428.09131 m
313.54611 429.71669 313.75843 430.01603 314.57310 431.78060 C
316.77449 433.27446 316.31839 431.80980 317.52482 430.45257 C
317.18353 428.89748 316.88872 427.47392 314.68394 428.09131 C
@c
350.91581 430.63710 m
352.16844 431.47191 353.29776 430.91858 353.60929 432.03912 C
353.42476 433.14576 352.50265 434.65861 351.83820 435.80268 C
352.12847 436.84838 352.28324 436.31546 353.16652 435.80268 C
354.08920 434.40066 354.67909 432.88781 355.78630 431.11672 C
355.72450 430.89534 355.66328 430.67395 355.60176 430.45257 C
354.56031 430.45257 351.56750 430.05742 350.91581 430.63710 C
@c
348.29631 432.70328 m
346.82060 435.98693 346.11931 439.75049 348.07493 443.18154 C
348.73880 443.47691 348.73880 443.80885 349.40324 444.28876 C
348.70734 440.34463 348.29631 436.70211 348.29631 432.70328 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel8Dict
%%EOF
